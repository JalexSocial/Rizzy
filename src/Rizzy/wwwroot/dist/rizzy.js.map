{"version":3,"file":"rizzy.js","mappings":"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","sources":["webpack:///./wwwroot/js/rizzy-nonce.js","webpack:///./wwwroot/js/rizzy-streaming.js","webpack:///external module \"htmx.org\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///./wwwroot/js/rizzy.js"],"sourcesContent":["import htmx from 'htmx';\r\n\r\n(function() {\r\n    \r\n    htmx.defineExtension('rizzy-nonce',\r\n        {\r\n            transformResponse: function(text, xhr, elt) {\r\n\r\n                let documentNonce = htmx.config.documentNonce ?? htmx.config.inlineScriptNonce;\r\n\r\n                if (!documentNonce) {\r\n                    console.warn(\"rizzy-nonce extension loaded but no no nonce found for document. Inline scripts may be blocked.\");\r\n                    documentNonce = \"\";\r\n                }\r\n\r\n                // disable ajax fetching on history miss because it doesn't handle nonce replacment\r\n                htmx.config.refreshOnHistoryMiss = true; \r\n\r\n                // CSP nonce determination based on safe-nonce by Michael West\r\n                let nonce = xhr?.getResponseHeader('HX-Nonce');\r\n                if (!nonce) {\r\n                    const csp = xhr?.getResponseHeader('content-security-policy');\r\n                    if (csp) {\r\n                        const cspMatch = csp.match(/(style|script)-src[^;]*'nonce-([^']*)'/i);\r\n                        if (cspMatch) {\r\n                            nonce = cspMatch[2];\r\n                        }\r\n                    }\r\n                }\r\n                if (xhr && window.location.hostname) {\r\n                    const responseURL = new URL(xhr.responseURL);\r\n                    if (responseURL.hostname !== window.location.hostname) {\r\n                        nonce = ''; // ignore nonce header if request is not some domain \r\n                    }\r\n                }\r\n\r\n                nonce ??= '';\r\n\r\n                return this.processUnsafeHtml(text, documentNonce, nonce);\r\n            },\r\n            processUnsafeHtml: function(text, documentNonce, newScriptNonce) {\r\n                //const noncePattern = new RegExp(`(['\"])${newScriptNonce}\\\\1`, 'gi');\r\n\r\n                // Replace any occurrences of the nonce provided by the server with\r\n                // the existing document nonce. Note that at minimum the server text originates\r\n                // from is same-origin and the newScriptNonce that is replaced is determined\r\n                // from response headers which are only available when processing the xmlHttpRequest\r\n                if (documentNonce)\r\n                    text = text.replaceAll(newScriptNonce, documentNonce);\r\n\r\n                const parser = new DOMParser();\r\n\r\n                try {\r\n                    // At this point any remaining elements that don't have the correct\r\n                    // nonce will cause console errors to be emitted. We are going to strip\r\n                    // out those elements and any attempts to block rizzy-nonce in the included markup.\r\n                    let doc = parser.parseFromString(text, \"text/html\");\r\n\r\n                    if (doc) {\r\n                        // Remove any attempts to disable rizzy-nonce extension\r\n                        Array.from(doc.querySelectorAll('[hx-ext*=\"ignore:rizzy-nonce\"], [data-hx-ext*=\"ignore:rizzy-nonce\"]'))\r\n                            .forEach((elt) => {\r\n                                elt.remove();\r\n                            });\r\n\r\n                        // Select all <script> and <style> tags\r\n                        const elements = doc.querySelectorAll(\"script, style, link\");\r\n\r\n                        // Iterate through each element\r\n                        elements.forEach(elt => {\r\n                            const nonce = elt.getAttribute(\"nonce\");\r\n                            if (nonce !== documentNonce) {\r\n                                // Remove the element if the nonce doesn't match (or is missing)\r\n                                elt.remove();\r\n                            }\r\n                        });\r\n\r\n                        // Serialize the document back into an HTML string and return it\r\n                        return doc.documentElement.outerHTML;\r\n                    }\r\n\r\n                } catch (_) { }\r\n                {\r\n\r\n                }\r\n\r\n                return '';\r\n\r\n            }\r\n        });\r\n\r\n})()","/*\r\n * Blazor Stream Rendering HTMX Extension\r\n * Author: Michael Tanczos\r\n * Credits to SSE extension and Microsoft aspnetcore\r\n * at https://github.com/dotnet/aspnetcore/blob/main/src/Components/Web.JS/src/Rendering/StreamingRendering.ts\r\n */\r\nimport htmx from 'htmx';\r\n\r\n(function () {\r\n\r\n    var api;\r\n    var enableDomPreservation = true;\r\n    var componentLoaded = false;\r\n\r\n    class blazorStreamingUpdate extends HTMLElement {\r\n        connectedCallback() {\r\n            const blazorSsrElement = this.parentNode;\r\n\r\n            // Synchronously remove this from the DOM to minimize our chance of affecting anything else\r\n            blazorSsrElement.parentNode?.removeChild(blazorSsrElement);\r\n\r\n            // When this element receives content, if it's <template blazor-component-id=\"...\">...</template>,\r\n            // insert the template content into the DOM\r\n            blazorSsrElement.childNodes.forEach(node => {\r\n                if (node instanceof HTMLTemplateElement) {\r\n                    const componentId = node.getAttribute(\"blazor-component-id\");\r\n                    if (componentId) {\r\n                        insertStreamingContentIntoDocument(componentId, node.content);\r\n                    }\r\n                }\r\n            });\r\n\r\n            htmx?.process(document.body);\r\n        }\r\n    }\r\n\r\n    htmx.defineExtension(\"rizzy-streaming\",\r\n        {\r\n            /**\r\n             * Init saves the provided reference to the internal HTMX API.\r\n             *\r\n             * @param {import(\"../htmx\").HtmxInternalApi} api\r\n             * @returns void\r\n             */\r\n            init: function (apiRef) {\r\n                // store a reference to the internal API.\r\n                api = apiRef;\r\n\r\n                // set a function in the public API for creating new EventSource objects\r\n                if (htmx.blazorSwapSsr == undefined) {\r\n                    if (customElements.get('blazor-ssr-end') === undefined) {\r\n                        customElements.define('blazor-ssr-end', blazorStreamingUpdate);\r\n                    }\r\n                    htmx.blazorSwapSsr = blazorSwapSsr;\r\n                }\r\n            },\r\n            onEvent: function (name, evt) {\r\n                if (name === \"htmx:afterOnLoad\") {\r\n                    htmx?.process(document.body);\r\n                }\r\n                else if (name === \"htmx:beforeRequest\") {\r\n                    var element = evt.detail.elt;\r\n                    if (evt.detail.requestConfig.target) {\r\n                        evt.detail.requestConfig.target.addEventListener(\"htmx:beforeSwap\",\r\n                            e => {\r\n                                // Any html that was already streamed in could have been updated with\r\n                                // blazor ssr content so the final xhr response can be thrown away\r\n                                //e.detail.shouldSwap = false;\r\n                            }, { once: true });\r\n                    }\r\n\r\n                    var last = 0;\r\n                    var swapSpec = api.getSwapSpecification(element);\r\n                    var xhr = evt.detail.xhr;\r\n\r\n                    // Create a container id for a temporary div container. All streamed html will be placed \r\n                    // inside the container so that htmx swap methods work correctly\r\n                    var cid = 'ctr' + crypto.randomUUID();\r\n\r\n                    xhr.addEventListener(\"readystatechange\", () => {\r\n\r\n                        // If finished we can unwrap the container all html was stored into\r\n                        if (xhr.readyState === 4) {\r\n                            var container = document.getElementById(cid);\r\n\r\n                            if (container != null)\r\n                                unwrap(container);\r\n                        }\r\n                    });\r\n\r\n                    xhr.addEventListener(\"progress\", e => {\r\n\r\n                        var container = document.getElementById(cid);\r\n\r\n                        // If the container doesn't exist we need to create it and swap it into the element\r\n                        // target space. From here on we can stream responses into the container directly.\r\n                        if (container == null) {\r\n                            container = document.createElement('div');\r\n                            container.id = cid;\r\n\r\n                            // Swap in a container div to hold the streaming html\r\n                            swap(element, container.outerHTML, swapSpec, xhr);\r\n\r\n                            // The very first swap into the container can be a replacement swap\r\n                            swapSpec.swapStyle = \"innerHTML\";\r\n\r\n                            // Ensure there is always a container even if not added to the dom\r\n                            container = document.getElementById(cid) ?? container;\r\n                        }\r\n\r\n                        // Compute any new html in this chunk\r\n                        diff = e.currentTarget.response.substring(last);\r\n                        swap(container, diff, swapSpec, xhr);\r\n\r\n                        swapSpec.settleDelay = 0;\r\n                        swapSpec.swapStyle = \"beforeend\";\r\n                        last = e.loaded;\r\n                    });\r\n\r\n                }\r\n\r\n                return true;\r\n            }\r\n        });\r\n\r\n    function isCommentNodeInHead(commentNode) {\r\n        // Ensure that the provided node is indeed a comment node\r\n        if (commentNode && commentNode.nodeType === Node.COMMENT_NODE) {\r\n            let currentNode = commentNode.parentNode;\r\n            // Traverse up the DOM tree\r\n            while (currentNode !== null) {\r\n                if (currentNode === document.head) {\r\n                    // The comment node is within the <head>\r\n                    return true;\r\n                }\r\n                currentNode = currentNode.parentNode;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n        // The traversal reached the root without finding <head>, or <head> does not exist\r\n        return false;\r\n    }\r\n\r\n    function blazorSwapSsr(start, end, docFrag, xhr) {\r\n        var newDiv = wrap(start, end, 'ssr' + crypto.randomUUID());\r\n\r\n        var container = document.createElement('div');\r\n        container.appendChild(docFrag);\r\n\r\n        swap(newDiv, container.innerHTML, xhr);\r\n\r\n        unwrap(newDiv);\r\n    }\r\n\r\n    function wrap(start, end, id) {\r\n\r\n        var newDiv = document.createElement('div');\r\n        newDiv.id = id;\r\n\r\n        // Iterate through nodes between start and end\r\n        var currentNode = start.nextSibling;\r\n        while (currentNode && currentNode !== end) {\r\n            newDiv.appendChild(currentNode);\r\n            currentNode = start.nextSibling;\r\n        }\r\n\r\n        start.parentNode.insertBefore(newDiv, end);\r\n\r\n        return newDiv;\r\n    }\r\n\r\n    function unwrap(element) {\r\n        // Ensure that the element has a parent\r\n        if (element.parentNode) {\r\n            // Move all child nodes out of the element\r\n            while (element.firstChild) {\r\n                element.parentNode.insertBefore(element.firstChild, element);\r\n            }\r\n\r\n            // Remove the empty element\r\n            element.parentNode.removeChild(element);\r\n        }\r\n    }\r\n\r\n    function handleOutOfBandSwaps(elt, fragment, settleInfo) {\r\n        var oobSelects = api.getClosestAttributeValue(elt, \"hx-select-oob\");\r\n        if (oobSelects) {\r\n            var oobSelectValues = oobSelects.split(\",\");\r\n            for (var i = 0; i < oobSelectValues.length; i++) {\r\n                var oobSelectValue = oobSelectValues[i].split(\":\", 2);\r\n                var id = oobSelectValue[0].trim();\r\n                if (id.indexOf(\"#\") === 0) {\r\n                    id = id.substring(1);\r\n                }\r\n                var oobValue = oobSelectValue[1] || \"true\";\r\n                var oobElement = fragment.querySelector(\"#\" + id);\r\n                if (oobElement) {\r\n                    api.oobSwap(oobValue, oobElement, settleInfo);\r\n                }\r\n            }\r\n        }\r\n        forEach(findAll(fragment, '[hx-swap-oob], [data-hx-swap-oob]'), function (oobElement) {\r\n            var oobValue = getAttributeValue(oobElement, \"hx-swap-oob\");\r\n            if (oobValue != null) {\r\n                api.oobSwap(oobValue, oobElement, settleInfo);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement} elt\r\n     * @param {string} content\r\n     */\r\n    function swap(elt, content, swapSpec, xhr) {\r\n\r\n        api.withExtensions(elt, function (extension) {\r\n            content = extension.transformResponse(content, xhr, elt);\r\n        });\r\n\r\n        swapSpec ??= api.getSwapSpecification(elt);\r\n        var target = api.getTarget(elt);\r\n        var settleInfo = api.makeSettleInfo(elt);\r\n\r\n        // htmx 2.0\r\n        api.swap(target, content, swapSpec);\r\n\r\n        //api.selectAndSwap(swapSpec.swapStyle, target, elt, content, settleInfo);\r\n\r\n        settleInfo.elts.forEach(function (elt) {\r\n            if (elt.classList) {\r\n                elt.classList.add(htmx.config.settlingClass);\r\n            }\r\n            api.triggerEvent(elt, 'htmx:beforeSettle');\r\n        });\r\n\r\n        // Handle settle tasks (with delay if requested)\r\n        if (swapSpec.settleDelay > 0) {\r\n            setTimeout(doSettle(settleInfo), swapSpec.settleDelay);\r\n        } else {\r\n            doSettle(settleInfo)();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * doSettle mirrors much of the functionality in htmx that\r\n     * settles elements after their content has been swapped.\r\n     * TODO: this should be published by htmx, and not duplicated here\r\n     * @param {import(\"../htmx\").HtmxSettleInfo} settleInfo\r\n     * @returns () => void\r\n     */\r\n    function doSettle(settleInfo) {\r\n\r\n        return function () {\r\n            settleInfo.tasks.forEach(function (task) {\r\n                task.call();\r\n            });\r\n\r\n            settleInfo.elts.forEach(function (elt) {\r\n                if (elt.classList) {\r\n                    elt.classList.remove(htmx.config.settlingClass);\r\n                }\r\n                api.triggerEvent(elt, 'htmx:afterSettle');\r\n            });\r\n        }\r\n    }\r\n\r\n    function insertStreamingContentIntoDocument(componentIdAsString, docFrag) {\r\n        const markers = findStreamingMarkers(componentIdAsString)\r\n        if (markers) {\r\n            const { startMarker, endMarker } = markers\r\n            enableDomPreservation = !isCommentNodeInHead(startMarker);\r\n            if (enableDomPreservation) {\r\n                blazorSwapSsr(startMarker, endMarker, docFrag);\r\n            } else {\r\n                // In this mode we completely delete the old content before inserting the new content\r\n                const destinationRoot = endMarker.parentNode\r\n                const existingContent = new Range()\r\n                existingContent.setStart(startMarker, startMarker.textContent.length)\r\n                existingContent.setEnd(endMarker, 0)\r\n                existingContent.deleteContents()\r\n\r\n                while (docFrag.childNodes[0]) {\r\n                    destinationRoot.insertBefore(docFrag.childNodes[0], endMarker)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function findStreamingMarkers(componentIdAsString) {\r\n        // Find start marker\r\n        const expectedStartText = `bl:${componentIdAsString}`\r\n        const iterator = document.createNodeIterator(\r\n            document,\r\n            NodeFilter.SHOW_COMMENT\r\n        )\r\n        let startMarker = null\r\n        while ((startMarker = iterator.nextNode())) {\r\n            if (startMarker.textContent === expectedStartText) {\r\n                break\r\n            }\r\n        }\r\n\r\n        if (!startMarker) {\r\n            return null\r\n        }\r\n\r\n        // Find end marker\r\n        const expectedEndText = `/bl:${componentIdAsString}`\r\n        let endMarker = null\r\n        while ((endMarker = iterator.nextNode())) {\r\n            if (endMarker.textContent === expectedEndText) {\r\n                break\r\n            }\r\n        }\r\n\r\n        return endMarker ? { startMarker, endMarker } : null\r\n    }\r\n})();","module.exports = __WEBPACK_EXTERNAL_MODULE_htmx_org_ba298f14__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./rizzy-nonce\"\r\nimport \"./rizzy-streaming\"\r\n\r\n"],"names":["htmx","defineExtension","transformResponse","text","xhr","elt","_htmx$config$document","documentNonce","config","inlineScriptNonce","console","warn","refreshOnHistoryMiss","nonce","getResponseHeader","csp","cspMatch","match","window","location","hostname","responseURL","URL","processUnsafeHtml","newScriptNonce","replaceAll","parser","DOMParser","doc","parseFromString","Array","from","querySelectorAll","forEach","remove","elements","getAttribute","documentElement","outerHTML","_","api","enableDomPreservation","componentLoaded","blazorStreamingUpdate","_HTMLElement","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","connectedCallback","_blazorSsrElement$par","blazorSsrElement","parentNode","removeChild","childNodes","node","HTMLTemplateElement","componentId","insertStreamingContentIntoDocument","content","process","document","body","_wrapNativeSuper","HTMLElement","init","apiRef","blazorSwapSsr","undefined","customElements","get","define","onEvent","name","evt","element","detail","requestConfig","target","addEventListener","e","once","last","swapSpec","getSwapSpecification","cid","crypto","randomUUID","readyState","container","getElementById","unwrap","_document$getElementB","createElement","id","swap","swapStyle","diff","currentTarget","response","substring","settleDelay","loaded","isCommentNodeInHead","commentNode","nodeType","Node","COMMENT_NODE","currentNode","head","start","end","docFrag","newDiv","wrap","appendChild","innerHTML","nextSibling","insertBefore","firstChild","handleOutOfBandSwaps","fragment","settleInfo","oobSelects","getClosestAttributeValue","oobSelectValues","split","i","length","oobSelectValue","trim","indexOf","oobValue","oobElement","querySelector","oobSwap","findAll","getAttributeValue","withExtensions","extension","getTarget","makeSettleInfo","elts","classList","add","settlingClass","triggerEvent","setTimeout","doSettle","tasks","task","call","componentIdAsString","markers","findStreamingMarkers","startMarker","endMarker","destinationRoot","existingContent","Range","setStart","textContent","setEnd","deleteContents","expectedStartText","concat","iterator","createNodeIterator","NodeFilter","SHOW_COMMENT","nextNode","expectedEndText"],"sourceRoot":""}