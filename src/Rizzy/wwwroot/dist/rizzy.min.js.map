{"version":3,"file":"rizzy.min.js","mappings":"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","sources":["webpack:///./wwwroot/js/vendor/aspnet-validation/aspnet-validation.js","webpack:///./wwwroot/js/rizzy-streaming.js","webpack:///./wwwroot/js/antiforgerySnippet.min.js","webpack:///./wwwroot/js/rizzy-nonce.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/node module decorator","webpack:///./wwwroot/js/rizzy.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"aspnetValidation\"] = factory();\r\n\telse\r\n\t\troot[\"aspnetValidation\"] = factory();\r\n})(self, () => {\r\nreturn /******/ (() => { // webpackBootstrap\r\n/******/ \t\"use strict\";\r\n/******/ \t// The require scope\r\n/******/ \tvar __webpack_require__ = {};\r\n/******/ \t\r\n/************************************************************************/\r\n/******/ \t/* webpack/runtime/define property getters */\r\n/******/ \t(() => {\r\n/******/ \t\t// define getter functions for harmony exports\r\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\r\n/******/ \t\t\tfor(var key in definition) {\r\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\r\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t};\r\n/******/ \t})();\r\n/******/ \t\r\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\r\n/******/ \t(() => {\r\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\r\n/******/ \t})();\r\n/******/ \t\r\n/******/ \t/* webpack/runtime/make namespace object */\r\n/******/ \t(() => {\r\n/******/ \t\t// define __esModule on exports\r\n/******/ \t\t__webpack_require__.r = (exports) => {\r\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t\t}\r\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t\t};\r\n/******/ \t})();\r\n/******/ \t\r\n/************************************************************************/\r\nvar __webpack_exports__ = {};\r\n/*!**********************!*\\\r\n  !*** ./src/index.ts ***!\r\n  \\**********************/\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\r\n/* harmony export */   MvcValidationProviders: () => (/* binding */ MvcValidationProviders),\r\n/* harmony export */   ValidationService: () => (/* binding */ ValidationService),\r\n/* harmony export */   isValidatable: () => (/* binding */ isValidatable)\r\n/* harmony export */ });\r\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar nullLogger = new (/** @class */ (function () {\r\n    function class_1() {\r\n        this.warn = globalThis.console.warn;\r\n    }\r\n    class_1.prototype.log = function (_) {\r\n        var _args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            _args[_i - 1] = arguments[_i];\r\n        }\r\n    };\r\n    return class_1;\r\n}()))();\r\n/**\r\n * Checks if `element` is validatable (`input`, `select`, `textarea`).\r\n * @param element The element to check.\r\n * @returns `true` if validatable, otherwise `false`.\r\n */\r\nvar isValidatable = function (element) {\r\n    return element instanceof HTMLInputElement\r\n        || element instanceof HTMLSelectElement\r\n        || element instanceof HTMLTextAreaElement;\r\n};\r\nvar validatableElementTypes = ['input', 'select', 'textarea'];\r\n/**\r\n * Generates a selector to match validatable elements (`input`, `select`, `textarea`).\r\n * @param selector An optional selector to apply to the valid input types, e.g. `[data-val=\"true\"]`.\r\n * @returns The validatable elements.\r\n */\r\nvar validatableSelector = function (selector) {\r\n    return validatableElementTypes.map(function (t) { return \"\".concat(t).concat(selector || ''); }).join(',');\r\n};\r\n/**\r\n * Resolves and returns the element referred by original element using ASP.NET selector logic.\r\n * @param element - The input to validate\r\n * @param selector - Used to find the field. Ex. *.Password where * replaces whatever prefixes asp.net might add.\r\n */\r\nfunction getRelativeFormElement(element, selector) {\r\n    // example elementName: Form.PasswordConfirm, Form.Email\r\n    // example selector (dafuq): *.Password, *.__RequestVerificationToken\r\n    // example result element name: Form.Password, __RequestVerificationToken\r\n    var elementName = element.name;\r\n    var selectedName = selector.substring(2); // Password, __RequestVerificationToken\r\n    var objectName = '';\r\n    var dotLocation = elementName.lastIndexOf('.');\r\n    if (dotLocation > -1) {\r\n        // Form\r\n        objectName = elementName.substring(0, dotLocation);\r\n        // Form.Password\r\n        var relativeElementName = objectName + '.' + selectedName;\r\n        var relativeElement = document.getElementsByName(relativeElementName)[0];\r\n        if (isValidatable(relativeElement)) {\r\n            return relativeElement;\r\n        }\r\n    }\r\n    // __RequestVerificationToken\r\n    return element.form.querySelector(validatableSelector(\"[name=\".concat(selectedName, \"]\")));\r\n}\r\n/**\r\n * Contains default implementations for ASP.NET Core MVC validation attributes.\r\n */\r\nvar MvcValidationProviders = /** @class */ (function () {\r\n    function MvcValidationProviders() {\r\n        /**\r\n         * Validates whether the input has a value.\r\n         */\r\n        this.required = function (value, element, params) {\r\n            // Handle single and multiple checkboxes/radio buttons.\r\n            var elementType = element.type.toLowerCase();\r\n            if (elementType === \"checkbox\" || elementType === \"radio\") {\r\n                var allElementsOfThisName = Array.from(element.form.querySelectorAll(validatableSelector(\"[name='\".concat(element.name, \"'][type='\").concat(elementType, \"']\"))));\r\n                for (var _i = 0, allElementsOfThisName_1 = allElementsOfThisName; _i < allElementsOfThisName_1.length; _i++) {\r\n                    var element_1 = allElementsOfThisName_1[_i];\r\n                    if (element_1 instanceof HTMLInputElement && element_1.checked === true) {\r\n                        return true;\r\n                    }\r\n                }\r\n                // Checkboxes do not submit a value when unchecked. To work around this, platforms such as ASP.NET render a\r\n                // hidden input with the same name as the checkbox so that a value (\"false\") is still submitted even when\r\n                // the checkbox is not checked. We check this special case here.\r\n                if (elementType === \"checkbox\") {\r\n                    var checkboxHiddenInput = element.form.querySelector(\"input[name='\".concat(element.name, \"'][type='hidden']\"));\r\n                    if (checkboxHiddenInput instanceof HTMLInputElement && checkboxHiddenInput.value === \"false\") {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            // Default behavior otherwise (trim ensures whitespace only is not seen as valid).\r\n            return Boolean(value === null || value === void 0 ? void 0 : value.trim());\r\n        };\r\n        /**\r\n         * Validates whether the input value satisfies the length contstraint.\r\n         */\r\n        this.stringLength = function (value, element, params) {\r\n            if (!value) {\r\n                return true;\r\n            }\r\n            if (params.min) {\r\n                var min = parseInt(params.min);\r\n                if (value.length < min) {\r\n                    return false;\r\n                }\r\n            }\r\n            if (params.max) {\r\n                var max = parseInt(params.max);\r\n                if (value.length > max) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        /**\r\n         * Validates whether the input value is equal to another input value.\r\n         */\r\n        this.compare = function (value, element, params) {\r\n            if (!params.other) {\r\n                return true;\r\n            }\r\n            var otherElement = getRelativeFormElement(element, params.other);\r\n            if (!otherElement) {\r\n                return true;\r\n            }\r\n            return (otherElement.value === value);\r\n        };\r\n        /**\r\n         * Validates whether the input value is a number within a given range.\r\n         */\r\n        this.range = function (value, element, params) {\r\n            if (!value) {\r\n                return true;\r\n            }\r\n            var val = parseFloat(value);\r\n            if (isNaN(val)) {\r\n                return false;\r\n            }\r\n            if (params.min) {\r\n                var min = parseFloat(params.min);\r\n                if (val < min) {\r\n                    return false;\r\n                }\r\n            }\r\n            if (params.max) {\r\n                var max = parseFloat(params.max);\r\n                if (val > max) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        /**\r\n         * Validates whether the input value satisfies a regular expression pattern.\r\n         */\r\n        this.regex = function (value, element, params) {\r\n            if (!value || !params.pattern) {\r\n                return true;\r\n            }\r\n            var r = new RegExp(params.pattern);\r\n            return r.test(value);\r\n        };\r\n        /**\r\n         * Validates whether the input value is an email in accordance to RFC822 specification, with a top level domain.\r\n         */\r\n        this.email = function (value, element, params) {\r\n            if (!value) {\r\n                return true;\r\n            }\r\n            // RFC822 email address with .TLD validation\r\n            // (c) Richard Willis, Chris Ferdinandi, MIT Licensed\r\n            // https://gist.github.com/badsyntax/719800\r\n            // https://gist.github.com/cferdinandi/d04aad4ce064b8da3edf21e26f8944c4\r\n            var r = /^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*(\\.\\w{2,})+$/;\r\n            return r.test(value);\r\n        };\r\n        /**\r\n         * Validates whether the input value is a credit card number, with Luhn's Algorithm.\r\n         */\r\n        this.creditcard = function (value, element, params) {\r\n            if (!value) {\r\n                return true;\r\n            }\r\n            // (c) jquery-validation, MIT Licensed\r\n            // https://github.com/jquery-validation/jquery-validation/blob/master/src/additional/creditcard.js\r\n            // based on https://en.wikipedia.org/wiki/Luhn_algorithm\r\n            // Accept only spaces, digits and dashes\r\n            if (/[^0-9 \\-]+/.test(value)) {\r\n                return false;\r\n            }\r\n            var nCheck = 0, nDigit = 0, bEven = false, n, cDigit;\r\n            value = value.replace(/\\D/g, \"\");\r\n            // Basing min and max length on https://developer.ean.com/general_info/Valid_Credit_Card_Types\r\n            if (value.length < 13 || value.length > 19) {\r\n                return false;\r\n            }\r\n            for (n = value.length - 1; n >= 0; n--) {\r\n                cDigit = value.charAt(n);\r\n                nDigit = parseInt(cDigit, 10);\r\n                if (bEven) {\r\n                    if ((nDigit *= 2) > 9) {\r\n                        nDigit -= 9;\r\n                    }\r\n                }\r\n                nCheck += nDigit;\r\n                bEven = !bEven;\r\n            }\r\n            return (nCheck % 10) === 0;\r\n        };\r\n        /**\r\n         * Validates whether the input value is a URL.\r\n         */\r\n        this.url = function (value, element, params) {\r\n            if (!value) {\r\n                return true;\r\n            }\r\n            var lowerCaseValue = value.toLowerCase();\r\n            // Match the logic in `UrlAttribute`\r\n            return lowerCaseValue.indexOf('http://') > -1\r\n                || lowerCaseValue.indexOf('https://') > -1\r\n                || lowerCaseValue.indexOf('ftp://') > -1;\r\n        };\r\n        /**\r\n         * Validates whether the input value is a phone number.\r\n         */\r\n        this.phone = function (value, element, params) {\r\n            if (!value) {\r\n                return true;\r\n            }\r\n            // Allows whitespace or dash as number separator because some people like to do that...\r\n            var consecutiveSeparator = /[\\+\\-\\s][\\-\\s]/g;\r\n            if (consecutiveSeparator.test(value)) {\r\n                return false;\r\n            }\r\n            var r = /^\\+?[0-9\\-\\s]+$/;\r\n            return r.test(value);\r\n        };\r\n        /**\r\n         * Asynchronously validates the input value to a JSON GET API endpoint.\r\n         */\r\n        this.remote = function (value, element, params) {\r\n            if (!value) {\r\n                return true;\r\n            }\r\n            // params.additionalfields: *.Email,*.Username\r\n            var fieldSelectors = params.additionalfields.split(',');\r\n            var fields = {};\r\n            for (var _i = 0, fieldSelectors_1 = fieldSelectors; _i < fieldSelectors_1.length; _i++) {\r\n                var fieldSelector = fieldSelectors_1[_i];\r\n                var fieldName = fieldSelector.substr(2);\r\n                var fieldElement = getRelativeFormElement(element, fieldSelector);\r\n                var hasValue = Boolean(fieldElement && fieldElement.value);\r\n                if (!hasValue) {\r\n                    continue;\r\n                }\r\n                if (fieldElement instanceof HTMLInputElement &&\r\n                    (fieldElement.type === 'checkbox' || fieldElement.type === 'radio')) {\r\n                    fields[fieldName] = fieldElement.checked ? fieldElement.value : '';\r\n                }\r\n                else {\r\n                    fields[fieldName] = fieldElement.value;\r\n                }\r\n            }\r\n            var url = params['url'];\r\n            var encodedParams = [];\r\n            for (var fieldName in fields) {\r\n                var encodedParam = encodeURIComponent(fieldName) + '=' + encodeURIComponent(fields[fieldName]);\r\n                encodedParams.push(encodedParam);\r\n            }\r\n            var payload = encodedParams.join('&');\r\n            return new Promise(function (ok, reject) {\r\n                var request = new XMLHttpRequest();\r\n                if (params.type && params.type.toLowerCase() === 'post') {\r\n                    var postData = new FormData();\r\n                    for (var fieldName in fields) {\r\n                        postData.append(fieldName, fields[fieldName]);\r\n                    }\r\n                    request.open('post', url);\r\n                    request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n                    request.send(payload);\r\n                }\r\n                else {\r\n                    request.open('get', url + '?' + payload);\r\n                    request.send();\r\n                }\r\n                request.onload = function (e) {\r\n                    if (request.status >= 200 && request.status < 300) {\r\n                        var data = JSON.parse(request.responseText);\r\n                        ok(data);\r\n                    }\r\n                    else {\r\n                        reject({\r\n                            status: request.status,\r\n                            statusText: request.statusText,\r\n                            data: request.responseText\r\n                        });\r\n                    }\r\n                };\r\n                request.onerror = function (e) {\r\n                    reject({\r\n                        status: request.status,\r\n                        statusText: request.statusText,\r\n                        data: request.responseText\r\n                    });\r\n                };\r\n            });\r\n        };\r\n    }\r\n    return MvcValidationProviders;\r\n}());\r\n\r\n/**\r\n * Responsible for managing the DOM elements and running the validation providers.\r\n */\r\nvar ValidationService = /** @class */ (function () {\r\n    function ValidationService(logger) {\r\n        var _this = this;\r\n        /**\r\n         * A key-value collection of loaded validation plugins.\r\n         */\r\n        this.providers = {};\r\n        /**\r\n         * A key-value collection of form UIDs and their <span> elements for displaying validation messages for an input (by DOM name).\r\n         */\r\n        this.messageFor = {};\r\n        /**\r\n         * A list of managed elements, each having a randomly assigned unique identifier (UID).\r\n         */\r\n        this.elementUIDs = [];\r\n        /**\r\n         * A key-value collection of UID to Element for quick lookup.\r\n         */\r\n        this.elementByUID = {};\r\n        /**\r\n         * A key-value collection of input UIDs for a <form> UID.\r\n         */\r\n        this.formInputs = {};\r\n        /**\r\n         * A key-value map for input UID to its validator factory.\r\n         */\r\n        this.validators = {};\r\n        /**\r\n         * A key-value map for form UID to its trigger element (submit event for <form>).\r\n         */\r\n        this.formEvents = {};\r\n        /**\r\n         * A key-value map for element UID to its trigger element (input event for <textarea> and <input>, change event for <select>).\r\n         */\r\n        this.inputEvents = {};\r\n        /**\r\n         * A key-value map of input UID to its validation error message.\r\n         */\r\n        this.summary = {};\r\n        /**\r\n         * In milliseconds, the rate of fire of the input validation.\r\n         */\r\n        this.debounce = 300;\r\n        /**\r\n         * Allow hidden fields validation\r\n         */\r\n        this.allowHiddenFields = false;\r\n        /**\r\n         * Fires off validation for elements within the provided form and then calls the callback\r\n         * @param form The form to validate.\r\n         * @param callback Receives true or false indicating validity after all validation is complete.\r\n         * @returns Promise that resolves to true or false indicating validity after all validation is complete.\r\n         */\r\n        this.validateForm = function (form, callback) { return __awaiter(_this, void 0, void 0, function () {\r\n            var formUID, formValidationEvent, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!(form instanceof HTMLFormElement)) {\r\n                            throw new Error('validateForm() can only be called on <form> elements');\r\n                        }\r\n                        formUID = this.getElementUID(form);\r\n                        formValidationEvent = this.formEvents[formUID];\r\n                        _a = !formValidationEvent;\r\n                        if (_a) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, formValidationEvent(undefined, callback)];\r\n                    case 1:\r\n                        _a = (_b.sent());\r\n                        _b.label = 2;\r\n                    case 2: return [2 /*return*/, _a];\r\n                }\r\n            });\r\n        }); };\r\n        /**\r\n         * Fires off validation for the provided element and then calls the callback\r\n         * @param field The element to validate.\r\n         * @param callback Receives true or false indicating validity after all validation is complete.\r\n         * @returns Promise that resolves to true or false indicating validity after all validation is complete\r\n         */\r\n        this.validateField = function (field, callback) { return __awaiter(_this, void 0, void 0, function () {\r\n            var fieldUID, fieldValidationEvent, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        fieldUID = this.getElementUID(field);\r\n                        fieldValidationEvent = this.inputEvents[fieldUID];\r\n                        _a = !fieldValidationEvent;\r\n                        if (_a) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, fieldValidationEvent(undefined, callback)];\r\n                    case 1:\r\n                        _a = (_b.sent());\r\n                        _b.label = 2;\r\n                    case 2: return [2 /*return*/, _a];\r\n                }\r\n            });\r\n        }); };\r\n        /**\r\n         * Called before validating form submit events.\r\n         * Default calls `preventDefault()` and `stopImmediatePropagation()`.\r\n         * @param submitEvent The `SubmitEvent`.\r\n         */\r\n        this.preValidate = function (submitEvent) {\r\n            submitEvent.preventDefault();\r\n            submitEvent.stopImmediatePropagation();\r\n        };\r\n        /**\r\n         * Handler for validated form submit events.\r\n         * Default calls `submitValidForm(form, submitEvent)` on success\r\n         * and `focusFirstInvalid(form)` on failure.\r\n         * @param form The form that has been validated.\r\n         * @param success The validation result.\r\n         * @param submitEvent The `SubmitEvent`.\r\n         */\r\n        this.handleValidated = function (form, success, submitEvent) {\r\n            if (!(form instanceof HTMLFormElement)) {\r\n                throw new Error('handleValidated() can only be called on <form> elements');\r\n            }\r\n            if (success) {\r\n                if (submitEvent) {\r\n                    _this.submitValidForm(form, submitEvent);\r\n                }\r\n            }\r\n            else {\r\n                _this.focusFirstInvalid(form);\r\n            }\r\n        };\r\n        /**\r\n         * Dispatches a new `SubmitEvent` on the provided form,\r\n         * then calls `form.submit()` unless `submitEvent` is cancelable\r\n         * and `preventDefault()` was called by a handler that received the new event.\r\n         *\r\n         * This is equivalent to `form.requestSubmit()`, but more flexible.\r\n         * @param form The validated form to submit\r\n         * @param submitEvent The `SubmitEvent`.\r\n         */\r\n        this.submitValidForm = function (form, submitEvent) {\r\n            if (!(form instanceof HTMLFormElement)) {\r\n                throw new Error('submitValidForm() can only be called on <form> elements');\r\n            }\r\n            var newEvent = new SubmitEvent('submit', submitEvent);\r\n            if (form.dispatchEvent(newEvent)) {\r\n                // Because the submitter is not propagated when calling\r\n                // form.submit(), we recreate it here.\r\n                var submitter = submitEvent.submitter;\r\n                var submitterInput = null;\r\n                var initialFormAction = form.action;\r\n                if (submitter) {\r\n                    var name_1 = submitter.getAttribute('name');\r\n                    // If name is null, a submit button is not submitted.\r\n                    if (name_1) {\r\n                        submitterInput = document.createElement('input');\r\n                        submitterInput.type = 'hidden';\r\n                        submitterInput.name = name_1;\r\n                        submitterInput.value = submitter.getAttribute('value');\r\n                        form.appendChild(submitterInput);\r\n                    }\r\n                    var formAction = submitter.getAttribute('formaction');\r\n                    if (formAction) {\r\n                        form.action = formAction;\r\n                    }\r\n                }\r\n                try {\r\n                    form.submit();\r\n                }\r\n                finally {\r\n                    if (submitterInput) {\r\n                        // Important to clean up the submit input we created.\r\n                        form.removeChild(submitterInput);\r\n                    }\r\n                    form.action = initialFormAction;\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Focuses the first invalid element within the provided form\r\n         * @param form\r\n         */\r\n        this.focusFirstInvalid = function (form) {\r\n            if (!(form instanceof HTMLFormElement)) {\r\n                throw new Error('focusFirstInvalid() can only be called on <form> elements');\r\n            }\r\n            var formUID = _this.getElementUID(form);\r\n            var formInputUIDs = _this.formInputs[formUID];\r\n            var invalidFormInputUID = formInputUIDs === null || formInputUIDs === void 0 ? void 0 : formInputUIDs.find(function (uid) { return _this.summary[uid]; });\r\n            if (invalidFormInputUID) {\r\n                var firstInvalid = _this.elementByUID[invalidFormInputUID];\r\n                if (firstInvalid instanceof HTMLElement) {\r\n                    firstInvalid.focus();\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Returns true if the provided form is currently valid.\r\n         * The form will be validated unless prevalidate is set to false.\r\n         * @param form The form to validate.\r\n         * @param prevalidate Whether the form should be validated before returning.\r\n         * @param callback A callback that receives true or false indicating validity after all validation is complete. Ignored if prevalidate is false.\r\n         * @returns The current state of the form. May be inaccurate if any validation is asynchronous (e.g. remote); consider using `callback` instead.\r\n         */\r\n        this.isValid = function (form, prevalidate, callback) {\r\n            if (prevalidate === void 0) { prevalidate = true; }\r\n            if (!(form instanceof HTMLFormElement)) {\r\n                throw new Error('isValid() can only be called on <form> elements');\r\n            }\r\n            if (prevalidate) {\r\n                _this.validateForm(form, callback);\r\n            }\r\n            var formUID = _this.getElementUID(form);\r\n            var formInputUIDs = _this.formInputs[formUID];\r\n            var formIsInvalid = (formInputUIDs === null || formInputUIDs === void 0 ? void 0 : formInputUIDs.some(function (uid) { return _this.summary[uid]; })) === true;\r\n            return !formIsInvalid;\r\n        };\r\n        /**\r\n         * Returns true if the provided field is currently valid.\r\n         * The field will be validated unless prevalidate is set to false.\r\n         * @param field The field to validate.\r\n         * @param prevalidate Whether the field should be validated before returning.\r\n         * @param callback A callback that receives true or false indicating validity after all validation is complete. Ignored if prevalidate is false.\r\n         * @returns The current state of the field. May be inaccurate if any validation is asynchronous (e.g. remote); consider using `callback` instead.\r\n         */\r\n        this.isFieldValid = function (field, prevalidate, callback) {\r\n            if (prevalidate === void 0) { prevalidate = true; }\r\n            if (prevalidate) {\r\n                _this.validateField(field, callback);\r\n            }\r\n            var fieldUID = _this.getElementUID(field);\r\n            return _this.summary[fieldUID] === undefined;\r\n        };\r\n        /**\r\n         * Options for this instance of @type {ValidationService}.\r\n         */\r\n        this.options = {\r\n            root: document.body,\r\n            watch: false,\r\n            addNoValidate: true,\r\n        };\r\n        /**\r\n         * Override CSS class name for input validation error. Default: 'input-validation-error'\r\n         */\r\n        this.ValidationInputCssClassName = \"input-validation-error\";\r\n        /**\r\n         * Override CSS class name for valid input validation. Default: 'input-validation-valid'\r\n         */\r\n        this.ValidationInputValidCssClassName = \"input-validation-valid\";\r\n        /**\r\n         * Override CSS class name for field validation error. Default: 'field-validation-error'\r\n         */\r\n        this.ValidationMessageCssClassName = \"field-validation-error\";\r\n        /**\r\n         * Override CSS class name for valid field validation. Default: 'field-validation-valid'\r\n         */\r\n        this.ValidationMessageValidCssClassName = \"field-validation-valid\";\r\n        /**\r\n         * Override CSS class name for validation summary error. Default: 'validation-summary-errors'\r\n         */\r\n        this.ValidationSummaryCssClassName = \"validation-summary-errors\";\r\n        /**\r\n         * Override CSS class name for valid validation summary. Default: 'validation-summary-valid'\r\n         */\r\n        this.ValidationSummaryValidCssClassName = \"validation-summary-valid\";\r\n        this.logger = logger || nullLogger;\r\n    }\r\n    /**\r\n     * Registers a new validation plugin of the given name, if not registered yet.\r\n     * Registered plugin validates inputs with data-val-[name] attribute, used as error message.\r\n     * @param name\r\n     * @param callback\r\n     */\r\n    ValidationService.prototype.addProvider = function (name, callback) {\r\n        if (this.providers[name]) {\r\n            // First-Come-First-Serve validation plugin design.\r\n            // Allows developers to override the default MVC Providers by adding custom providers BEFORE bootstrap() is called!\r\n            return;\r\n        }\r\n        this.logger.log(\"Registered provider: %s\", name);\r\n        this.providers[name] = callback;\r\n    };\r\n    /**\r\n     * Registers the default providers for enabling ASP.NET Core MVC client-side validation.\r\n     */\r\n    ValidationService.prototype.addMvcProviders = function () {\r\n        var mvc = new MvcValidationProviders();\r\n        // [Required]\r\n        this.addProvider('required', mvc.required);\r\n        // [StringLength], [MinLength], [MaxLength]\r\n        this.addProvider('length', mvc.stringLength);\r\n        this.addProvider('maxlength', mvc.stringLength);\r\n        this.addProvider('minlength', mvc.stringLength);\r\n        // [Compare]\r\n        this.addProvider('equalto', mvc.compare);\r\n        // [Range]\r\n        this.addProvider('range', mvc.range);\r\n        // [RegularExpression]\r\n        this.addProvider('regex', mvc.regex);\r\n        // [CreditCard]\r\n        this.addProvider('creditcard', mvc.creditcard);\r\n        // [EmailAddress]\r\n        this.addProvider('email', mvc.email);\r\n        // [Url]\r\n        this.addProvider('url', mvc.url);\r\n        // [Phone]\r\n        this.addProvider('phone', mvc.phone);\r\n        // [Remote]\r\n        this.addProvider('remote', mvc.remote);\r\n    };\r\n    /**\r\n     * Scans `root` for all validation message <span> generated by ASP.NET Core MVC, then calls `cb` for each.\r\n     * @param root The root node to scan\r\n     * @param cb The callback to invoke with each form and span\r\n     */\r\n    ValidationService.prototype.scanMessages = function (root, cb) {\r\n        /* If a validation span explicitly declares a form, we group the span with that form. */\r\n        var validationMessageElements = Array.from(root.querySelectorAll('span[form]'));\r\n        for (var _i = 0, validationMessageElements_1 = validationMessageElements; _i < validationMessageElements_1.length; _i++) {\r\n            var span = validationMessageElements_1[_i];\r\n            var form = document.getElementById(span.getAttribute('form'));\r\n            if (form instanceof HTMLFormElement) {\r\n                cb.call(this, form, span);\r\n            }\r\n        }\r\n        // Otherwise if a validation message span is inside a form, we group the span with the form it's inside.\r\n        var forms = Array.from(root.querySelectorAll('form'));\r\n        if (root instanceof HTMLFormElement) {\r\n            // querySelectorAll does not include the root element itself.\r\n            // we could use 'matches', but that's newer than querySelectorAll so we'll keep it simple and compatible.\r\n            forms.push(root);\r\n        }\r\n        // If root is the descendant of a form, we want to include that form too.\r\n        var containingForm = (root instanceof Element) ? root.closest('form') : null;\r\n        if (containingForm) {\r\n            forms.push(containingForm);\r\n        }\r\n        for (var _a = 0, forms_1 = forms; _a < forms_1.length; _a++) {\r\n            var form = forms_1[_a];\r\n            var validationMessageElements_3 = Array.from(form.querySelectorAll('[data-valmsg-for]'));\r\n            for (var _b = 0, validationMessageElements_2 = validationMessageElements_3; _b < validationMessageElements_2.length; _b++) {\r\n                var span = validationMessageElements_2[_b];\r\n                cb.call(this, form, span);\r\n            }\r\n        }\r\n    };\r\n    ValidationService.prototype.pushValidationMessageSpan = function (form, span) {\r\n        var _a, _b;\r\n        var _c;\r\n        var formId = this.getElementUID(form);\r\n        var formSpans = (_a = (_c = this.messageFor)[formId]) !== null && _a !== void 0 ? _a : (_c[formId] = {});\r\n        var messageForId = span.getAttribute('data-valmsg-for');\r\n        if (!messageForId)\r\n            return;\r\n        var spans = (_b = formSpans[messageForId]) !== null && _b !== void 0 ? _b : (formSpans[messageForId] = []);\r\n        if (spans.indexOf(span) < 0) {\r\n            spans.push(span);\r\n        }\r\n        else {\r\n            this.logger.log(\"Validation element for '%s' is already tracked\", name, span);\r\n        }\r\n    };\r\n    ValidationService.prototype.removeValidationMessageSpan = function (form, span) {\r\n        var formId = this.getElementUID(form);\r\n        var formSpans = this.messageFor[formId];\r\n        if (!formSpans)\r\n            return;\r\n        var messageForId = span.getAttribute('data-valmsg-for');\r\n        if (!messageForId)\r\n            return;\r\n        var spans = formSpans[messageForId];\r\n        if (!spans) {\r\n            return;\r\n        }\r\n        var index = spans.indexOf(span);\r\n        if (index >= 0) {\r\n            spans.splice(index, 1);\r\n        }\r\n        else {\r\n            this.logger.log(\"Validation element for '%s' was already removed\", name, span);\r\n        }\r\n    };\r\n    /**\r\n     * Given attribute map for an HTML input, returns the validation directives to be executed.\r\n     * @param attributes\r\n     */\r\n    ValidationService.prototype.parseDirectives = function (attributes) {\r\n        var directives = {};\r\n        var validationAtributes = {};\r\n        var cut = 'data-val-'.length;\r\n        for (var i = 0; i < attributes.length; i++) {\r\n            var a = attributes[i];\r\n            if (a.name.indexOf('data-val-') === 0) {\r\n                var key = a.name.substr(cut);\r\n                validationAtributes[key] = a.value;\r\n            }\r\n        }\r\n        var _loop_1 = function (key) {\r\n            if (key.indexOf('-') === -1) {\r\n                var parameters = Object.keys(validationAtributes).filter(function (Q) {\r\n                    return (Q !== key) && (Q.indexOf(key) === 0);\r\n                });\r\n                var directive = {\r\n                    error: validationAtributes[key],\r\n                    params: {}\r\n                };\r\n                var pcut = (key + '-').length;\r\n                for (var i = 0; i < parameters.length; i++) {\r\n                    var pvalue = validationAtributes[parameters[i]];\r\n                    var pkey = parameters[i].substr(pcut);\r\n                    directive.params[pkey] = pvalue;\r\n                }\r\n                directives[key] = directive;\r\n            }\r\n        };\r\n        for (var key in validationAtributes) {\r\n            _loop_1(key);\r\n        }\r\n        return directives;\r\n    };\r\n    /**\r\n     *  Returns an RFC4122 version 4 compliant GUID.\r\n     */\r\n    ValidationService.prototype.guid4 = function () {\r\n        // (c) broofa, MIT Licensed\r\n        // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript/2117523#2117523\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a UID for an DOM element.\r\n     * @param node\r\n     */\r\n    ValidationService.prototype.getElementUID = function (node) {\r\n        var x = this.elementUIDs.filter(function (e) {\r\n            return e.node === node;\r\n        })[0];\r\n        if (x) {\r\n            return x.uid;\r\n        }\r\n        var uid = this.guid4();\r\n        this.elementUIDs.push({\r\n            node: node,\r\n            uid: uid\r\n        });\r\n        this.elementByUID[uid] = node;\r\n        return uid;\r\n    };\r\n    /**\r\n     * Returns a Promise that returns validation result for each and every inputs within the form.\r\n     * @param formUID\r\n     */\r\n    ValidationService.prototype.getFormValidationTask = function (formUID) {\r\n        var formInputUIDs = this.formInputs[formUID];\r\n        if (!formInputUIDs || formInputUIDs.length === 0) {\r\n            return Promise.resolve(true);\r\n        }\r\n        var formValidators = [];\r\n        for (var _i = 0, formInputUIDs_1 = formInputUIDs; _i < formInputUIDs_1.length; _i++) {\r\n            var inputUID = formInputUIDs_1[_i];\r\n            var validator = this.validators[inputUID];\r\n            if (validator) {\r\n                formValidators.push(validator);\r\n            }\r\n        }\r\n        var tasks = formValidators.map(function (factory) { return factory(); });\r\n        return Promise.all(tasks).then(function (result) { return result.every(function (e) { return e; }); });\r\n    };\r\n    // Retrieves the validation span for the input.\r\n    ValidationService.prototype.getMessageFor = function (input) {\r\n        var _a;\r\n        if (!input.form) {\r\n            return undefined;\r\n        }\r\n        var formId = this.getElementUID(input.form);\r\n        return (_a = this.messageFor[formId]) === null || _a === void 0 ? void 0 : _a[input.name];\r\n    };\r\n    /**\r\n     * Returns true if the event triggering the form submission indicates we should validate the form.\r\n     * @param e\r\n     */\r\n    ValidationService.prototype.shouldValidate = function (e) {\r\n        // Skip client-side validation if the form has been submitted via a button that has the \"formnovalidate\" attribute.\r\n        return !(e && e['submitter'] && e['submitter']['formNoValidate']);\r\n    };\r\n    /**\r\n     * Tracks a <form> element as parent of an input UID. When the form is submitted, attempts to validate the said input asynchronously.\r\n     * @param form\r\n     * @param inputUID\r\n     */\r\n    ValidationService.prototype.trackFormInput = function (form, inputUID) {\r\n        var _this = this;\r\n        var _a;\r\n        var _b;\r\n        var formUID = this.getElementUID(form);\r\n        var formInputUIDs = (_a = (_b = this.formInputs)[formUID]) !== null && _a !== void 0 ? _a : (_b[formUID] = []);\r\n        var add = formInputUIDs.indexOf(inputUID) === -1;\r\n        if (add) {\r\n            formInputUIDs.push(inputUID);\r\n            if (this.options.addNoValidate) {\r\n                this.logger.log('Setting novalidate on form', form);\r\n                form.setAttribute('novalidate', 'novalidate');\r\n            }\r\n            else {\r\n                this.logger.log('Not setting novalidate on form', form);\r\n            }\r\n        }\r\n        else {\r\n            this.logger.log(\"Form input for UID '%s' is already tracked\", inputUID);\r\n        }\r\n        if (this.formEvents[formUID]) {\r\n            return;\r\n        }\r\n        var validationTask = null;\r\n        var cb = function (e, callback) {\r\n            // Prevent recursion\r\n            if (validationTask) {\r\n                return validationTask;\r\n            }\r\n            if (!_this.shouldValidate(e)) {\r\n                return Promise.resolve(true);\r\n            }\r\n            validationTask = _this.getFormValidationTask(formUID);\r\n            //`preValidate` typically prevents submit before validation\r\n            if (e) {\r\n                _this.preValidate(e);\r\n            }\r\n            _this.logger.log('Validating', form);\r\n            return validationTask.then(function (success) { return __awaiter(_this, void 0, void 0, function () {\r\n                var validationEvent;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            this.logger.log('Validated (success = %s)', success, form);\r\n                            if (callback) {\r\n                                callback(success);\r\n                                return [2 /*return*/, success];\r\n                            }\r\n                            validationEvent = new CustomEvent('validation', {\r\n                                detail: { valid: success }\r\n                            });\r\n                            form.dispatchEvent(validationEvent);\r\n                            // Firefox fix: redispatch 'submit' after finished handling this event\r\n                            return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, 0); })];\r\n                        case 1:\r\n                            // Firefox fix: redispatch 'submit' after finished handling this event\r\n                            _a.sent();\r\n                            this.handleValidated(form, success, e);\r\n                            return [2 /*return*/, success];\r\n                    }\r\n                });\r\n            }); }).catch(function (error) {\r\n                _this.logger.log('Validation error', error);\r\n                return false;\r\n            }).finally(function () {\r\n                validationTask = null;\r\n            });\r\n        };\r\n        form.addEventListener('submit', cb);\r\n        var cbReset = function (e) {\r\n            var formInputUIDs = _this.formInputs[formUID];\r\n            for (var _i = 0, formInputUIDs_2 = formInputUIDs; _i < formInputUIDs_2.length; _i++) {\r\n                var inputUID_1 = formInputUIDs_2[_i];\r\n                _this.resetField(inputUID_1);\r\n            }\r\n            _this.renderSummary();\r\n        };\r\n        form.addEventListener('reset', cbReset);\r\n        cb.remove = function () {\r\n            form.removeEventListener('submit', cb);\r\n            form.removeEventListener('reset', cbReset);\r\n        };\r\n        this.formEvents[formUID] = cb;\r\n    };\r\n    /*\r\n        Reset the state of a validatable input. This is used when it's enabled or disabled.\r\n    */\r\n    ValidationService.prototype.reset = function (input) {\r\n        if (this.isDisabled(input)) {\r\n            this.resetField(this.getElementUID(input));\r\n        }\r\n        else {\r\n            this.scan(input);\r\n        }\r\n    };\r\n    ValidationService.prototype.resetField = function (inputUID) {\r\n        var input = this.elementByUID[inputUID];\r\n        this.swapClasses(input, '', this.ValidationInputCssClassName);\r\n        this.swapClasses(input, '', this.ValidationInputValidCssClassName);\r\n        var spans = isValidatable(input) && this.getMessageFor(input);\r\n        if (spans) {\r\n            for (var i = 0; i < spans.length; i++) {\r\n                spans[i].innerHTML = '';\r\n                this.swapClasses(spans[i], '', this.ValidationMessageCssClassName);\r\n                this.swapClasses(spans[i], '', this.ValidationMessageValidCssClassName);\r\n            }\r\n        }\r\n        delete this.summary[inputUID];\r\n    };\r\n    ValidationService.prototype.untrackFormInput = function (form, inputUID) {\r\n        var _a;\r\n        var formUID = this.getElementUID(form);\r\n        var formInputUIDs = this.formInputs[formUID];\r\n        if (!formInputUIDs) {\r\n            return;\r\n        }\r\n        var indexToRemove = formInputUIDs.indexOf(inputUID);\r\n        if (indexToRemove >= 0) {\r\n            formInputUIDs.splice(indexToRemove, 1);\r\n            if (!formInputUIDs.length) {\r\n                (_a = this.formEvents[formUID]) === null || _a === void 0 ? void 0 : _a.remove();\r\n                delete this.formEvents[formUID];\r\n                delete this.formInputs[formUID];\r\n                delete this.messageFor[formUID];\r\n            }\r\n        }\r\n        else {\r\n            this.logger.log(\"Form input for UID '%s' was already removed\", inputUID);\r\n        }\r\n    };\r\n    /**\r\n     * Adds an input element to be managed and validated by the service.\r\n     * Triggers a debounced live validation when input value changes.\r\n     * @param input\r\n     */\r\n    ValidationService.prototype.addInput = function (input) {\r\n        var _this = this;\r\n        var _a;\r\n        var uid = this.getElementUID(input);\r\n        var directives = this.parseDirectives(input.attributes);\r\n        this.validators[uid] = this.createValidator(input, directives);\r\n        if (input.form) {\r\n            this.trackFormInput(input.form, uid);\r\n        }\r\n        if (this.inputEvents[uid]) {\r\n            return;\r\n        }\r\n        var cb = function (event, callback) { return __awaiter(_this, void 0, void 0, function () {\r\n            var validate, success, error_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        validate = this.validators[uid];\r\n                        if (!validate)\r\n                            return [2 /*return*/, true];\r\n                        if (!input.dataset.valEvent &&\r\n                            event && event.type === 'input' &&\r\n                            !input.classList.contains(this.ValidationInputCssClassName)) {\r\n                            // When no data-val-event specified on a field, \"input\" event only takes it back to valid. \"Change\" event can make it invalid.\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        this.logger.log('Validating', { event: event });\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, validate()];\r\n                    case 2:\r\n                        success = _a.sent();\r\n                        callback(success);\r\n                        return [2 /*return*/, success];\r\n                    case 3:\r\n                        error_1 = _a.sent();\r\n                        this.logger.log('Validation error', error_1);\r\n                        return [2 /*return*/, false];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); };\r\n        var debounceTimeoutID = null;\r\n        cb.debounced = function (event, callback) {\r\n            if (debounceTimeoutID !== null) {\r\n                clearTimeout(debounceTimeoutID);\r\n            }\r\n            debounceTimeoutID = setTimeout(function () {\r\n                cb(event, callback);\r\n            }, _this.debounce);\r\n        };\r\n        var defaultEvent = input instanceof HTMLSelectElement ? 'change' : 'input change';\r\n        var validateEvent = (_a = input.dataset.valEvent) !== null && _a !== void 0 ? _a : defaultEvent;\r\n        var events = validateEvent.split(' ');\r\n        events.forEach(function (eventName) {\r\n            input.addEventListener(eventName, cb.debounced);\r\n        });\r\n        cb.remove = function () {\r\n            events.forEach(function (eventName) {\r\n                input.removeEventListener(eventName, cb.debounced);\r\n            });\r\n        };\r\n        this.inputEvents[uid] = cb;\r\n    };\r\n    ValidationService.prototype.removeInput = function (input) {\r\n        var uid = this.getElementUID(input);\r\n        // Clean up event listener\r\n        var cb = this.inputEvents[uid];\r\n        if (cb === null || cb === void 0 ? void 0 : cb.remove) {\r\n            cb.remove();\r\n            delete cb.remove;\r\n        }\r\n        delete this.summary[uid];\r\n        delete this.inputEvents[uid];\r\n        delete this.validators[uid];\r\n        if (input.form) {\r\n            this.untrackFormInput(input.form, uid);\r\n        }\r\n    };\r\n    /**\r\n     * Scans `root` for input elements to be validated, then calls `cb` for each.\r\n     * @param root The root node to scan\r\n     * @param cb The callback to invoke with each input\r\n     */\r\n    ValidationService.prototype.scanInputs = function (root, cb) {\r\n        var inputs = Array.from(root.querySelectorAll(validatableSelector('[data-val=\"true\"]')));\r\n        // querySelectorAll does not include the root element itself.\r\n        // we could use 'matches', but that's newer than querySelectorAll so we'll keep it simple and compatible.\r\n        if (isValidatable(root) && root.getAttribute(\"data-val\") === \"true\") {\r\n            inputs.push(root);\r\n        }\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            var input = inputs[i];\r\n            cb.call(this, input);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a <ul> element as a validation errors summary.\r\n     */\r\n    ValidationService.prototype.createSummaryDOM = function () {\r\n        if (!Object.keys(this.summary).length) {\r\n            return null;\r\n        }\r\n        var renderedMessages = [];\r\n        var ul = document.createElement('ul');\r\n        for (var key in this.summary) {\r\n            // It could be that the message we are rendering belongs to one of a fieldset of multiple inputs that's not selected,\r\n            // even if another one in the fieldset is. In that case the fieldset is valid, and we shouldn't render the message.\r\n            var matchingElement = this.elementByUID[key];\r\n            if (matchingElement instanceof HTMLInputElement) {\r\n                if (matchingElement.type === \"checkbox\" || matchingElement.type === \"radio\") {\r\n                    if (matchingElement.className === this.ValidationInputValidCssClassName) {\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            // With required multiple inputs, such as a checkbox list, we'll have one message per input.\r\n            // It's one from the inputs that's required, not all, so we should only have one message displayed.\r\n            if (renderedMessages.indexOf(this.summary[key]) > -1) {\r\n                continue;\r\n            }\r\n            var li = document.createElement('li');\r\n            li.innerHTML = this.summary[key];\r\n            ul.appendChild(li);\r\n            renderedMessages.push(this.summary[key]);\r\n        }\r\n        return ul;\r\n    };\r\n    /**\r\n     * Displays validation summary to ASP.NET Core MVC designated elements, when it actually gets updated.\r\n     */\r\n    ValidationService.prototype.renderSummary = function () {\r\n        var summaryElements = document.querySelectorAll('[data-valmsg-summary=\"true\"]');\r\n        if (!summaryElements.length) {\r\n            return;\r\n        }\r\n        // Prevents wasteful re-rendering of summary list element with identical items!\r\n        // Using JSON.stringify for quick and painless deep compare of simple KVP. You need to sort the keys first, tho...\r\n        var shadow = JSON.stringify(this.summary, Object.keys(this.summary).sort());\r\n        if (shadow === this.renderedSummaryJSON) {\r\n            return;\r\n        }\r\n        // Prevents wasteful re-rendering of summary list element with identical items!\r\n        this.renderedSummaryJSON = shadow;\r\n        var ul = this.createSummaryDOM();\r\n        for (var i = 0; i < summaryElements.length; i++) {\r\n            var e = summaryElements[i];\r\n            // Remove existing list elements, but keep the summary's message.\r\n            var listElements = e.querySelectorAll(\"ul\");\r\n            for (var j = 0; j < listElements.length; j++) {\r\n                listElements[j].remove();\r\n            }\r\n            // Style the summary element as valid/invalid depending on whether there are any messages to display.\r\n            if (ul && ul.hasChildNodes()) {\r\n                this.swapClasses(e, this.ValidationSummaryCssClassName, this.ValidationSummaryValidCssClassName);\r\n                e.appendChild(ul.cloneNode(true));\r\n            }\r\n            else {\r\n                this.swapClasses(e, this.ValidationSummaryValidCssClassName, this.ValidationSummaryCssClassName);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Adds an error message to an input element, which also updates the validation message elements and validation summary elements.\r\n     * @param input\r\n     * @param message\r\n     */\r\n    ValidationService.prototype.addError = function (input, message) {\r\n        var spans = this.getMessageFor(input);\r\n        if (spans) {\r\n            for (var i = 0; i < spans.length; i++) {\r\n                var span = spans[i];\r\n                spans[i].innerHTML = message;\r\n                this.swapClasses(spans[i], this.ValidationMessageCssClassName, this.ValidationMessageValidCssClassName);\r\n            }\r\n        }\r\n        this.highlight(input, this.ValidationInputCssClassName, this.ValidationInputValidCssClassName);\r\n        if (input.form) {\r\n            // Adding an error to one input should also add it to others with the same name (i.e. for radio button and checkbox lists).\r\n            var inputs = input.form.querySelectorAll(validatableSelector(\"[name=\\\"\".concat(input.name, \"\\\"]\")));\r\n            for (var i = 0; i < inputs.length; i++) {\r\n                this.swapClasses(inputs[i], this.ValidationInputCssClassName, this.ValidationInputValidCssClassName);\r\n                var uid = this.getElementUID(inputs[i]);\r\n                this.summary[uid] = message;\r\n            }\r\n        }\r\n        this.renderSummary();\r\n    };\r\n    /**\r\n     * Removes an error message from an input element, which also updates the validation message elements and validation summary elements.\r\n     * @param input\r\n     */\r\n    ValidationService.prototype.removeError = function (input) {\r\n        var spans = this.getMessageFor(input);\r\n        if (spans) {\r\n            for (var i = 0; i < spans.length; i++) {\r\n                spans[i].innerHTML = '';\r\n                this.swapClasses(spans[i], this.ValidationMessageValidCssClassName, this.ValidationMessageCssClassName);\r\n            }\r\n        }\r\n        this.unhighlight(input, this.ValidationInputCssClassName, this.ValidationInputValidCssClassName);\r\n        // Removing an error from one input should also remove it from others with the same name (i.e. for radio button and checkbox lists).\r\n        if (input.form) {\r\n            var inputs = input.form.querySelectorAll(validatableSelector(\"[name=\\\"\".concat(input.name, \"\\\"]\")));\r\n            for (var i = 0; i < inputs.length; i++) {\r\n                this.swapClasses(inputs[i], this.ValidationInputValidCssClassName, this.ValidationInputCssClassName);\r\n                var uid = this.getElementUID(inputs[i]);\r\n                delete this.summary[uid];\r\n            }\r\n        }\r\n        this.renderSummary();\r\n    };\r\n    /**\r\n     * Returns a validation Promise factory for an input element, using given validation directives.\r\n     * @param input\r\n     * @param directives\r\n     */\r\n    ValidationService.prototype.createValidator = function (input, directives) {\r\n        var _this = this;\r\n        return function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var _a, _b, _c, _i, key, directive, provider, result, valid, error, resolution;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        if (!(!this.isHidden(input) && !this.isDisabled(input))) return [3 /*break*/, 7];\r\n                        _a = directives;\r\n                        _b = [];\r\n                        for (_c in _a)\r\n                            _b.push(_c);\r\n                        _i = 0;\r\n                        _d.label = 1;\r\n                    case 1:\r\n                        if (!(_i < _b.length)) return [3 /*break*/, 7];\r\n                        _c = _b[_i];\r\n                        if (!(_c in _a)) return [3 /*break*/, 6];\r\n                        key = _c;\r\n                        directive = directives[key];\r\n                        provider = this.providers[key];\r\n                        if (!provider) {\r\n                            this.logger.log('aspnet-validation provider not implemented: %s', key);\r\n                            return [3 /*break*/, 6];\r\n                        }\r\n                        this.logger.log(\"Running %s validator on element\", key, input);\r\n                        result = provider(input.value, input, directive.params);\r\n                        valid = false;\r\n                        error = directive.error;\r\n                        if (!(typeof result === 'boolean')) return [3 /*break*/, 2];\r\n                        valid = result;\r\n                        return [3 /*break*/, 5];\r\n                    case 2:\r\n                        if (!(typeof result === 'string')) return [3 /*break*/, 3];\r\n                        valid = false;\r\n                        error = result;\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, result];\r\n                    case 4:\r\n                        resolution = _d.sent();\r\n                        if (typeof resolution === 'boolean') {\r\n                            valid = resolution;\r\n                        }\r\n                        else {\r\n                            valid = false;\r\n                            error = resolution;\r\n                        }\r\n                        _d.label = 5;\r\n                    case 5:\r\n                        if (!valid) {\r\n                            this.addError(input, error);\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        _d.label = 6;\r\n                    case 6:\r\n                        _i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 7:\r\n                        this.removeError(input);\r\n                        return [2 /*return*/, true];\r\n                }\r\n            });\r\n        }); };\r\n    };\r\n    /**\r\n     * Checks if the provided input is hidden from the browser\r\n     * @param input\r\n     * @returns\r\n     */\r\n    ValidationService.prototype.isHidden = function (input) {\r\n        return !(this.allowHiddenFields || input.offsetWidth || input.offsetHeight || input.getClientRects().length);\r\n    };\r\n    /**\r\n     * Checks if the provided input is disabled\r\n     * @param input\r\n     * @returns\r\n     */\r\n    ValidationService.prototype.isDisabled = function (input) {\r\n        // If the input is validatable, we check the `disabled` property.\r\n        // Otherwise the `disabled` property is undefined and this returns false.\r\n        return input.disabled;\r\n    };\r\n    /**\r\n     * Adds addClass and removes removeClass\r\n     * @param element Element to modify\r\n     * @param addClass Class to add\r\n     * @param removeClass Class to remove\r\n     */\r\n    ValidationService.prototype.swapClasses = function (element, addClass, removeClass) {\r\n        if (addClass && !this.isDisabled(element) && !element.classList.contains(addClass)) {\r\n            element.classList.add(addClass);\r\n        }\r\n        if (element.classList.contains(removeClass)) {\r\n            element.classList.remove(removeClass);\r\n        }\r\n    };\r\n    /**\r\n     * Load default validation providers and scans the entire document when ready.\r\n     * @param options.watch If set to true, a MutationObserver will be used to continuously watch for new elements that provide validation directives.\r\n     * @param options.addNoValidate If set to true (the default), a novalidate attribute will be added to the containing form in validate elements.\r\n     */\r\n    ValidationService.prototype.bootstrap = function (options) {\r\n        var _this = this;\r\n        Object.assign(this.options, options);\r\n        this.addMvcProviders();\r\n        var document = window.document;\r\n        var root = this.options.root;\r\n        var init = function () {\r\n            _this.scan(root);\r\n            // Watch for further mutations after initial scan\r\n            if (_this.options.watch) {\r\n                _this.watch(root);\r\n            }\r\n        };\r\n        // If the document is done loading, scan it now.\r\n        if (document.readyState === 'complete' || document.readyState === 'interactive') {\r\n            init();\r\n        }\r\n        else {\r\n            // Otherwise wait until the document is done loading.\r\n            document.addEventListener('DOMContentLoaded', init);\r\n        }\r\n    };\r\n    /**\r\n     * Scans the root element for any validation directives and attaches behavior to them.\r\n     * @param root The root node to scan; if not provided, `options.root` (default: `document.body`) will be scanned\r\n     */\r\n    ValidationService.prototype.scan = function (root) {\r\n        root !== null && root !== void 0 ? root : (root = this.options.root);\r\n        this.logger.log('Scanning', root);\r\n        this.scanMessages(root, this.pushValidationMessageSpan);\r\n        this.scanInputs(root, this.addInput);\r\n    };\r\n    /**\r\n     * Scans the root element for any validation directives and removes behavior from them.\r\n     * @param root The root node to scan; if not provided, `options.root` (default: `document.body`) will be scanned\r\n     */\r\n    ValidationService.prototype.remove = function (root) {\r\n        root !== null && root !== void 0 ? root : (root = this.options.root);\r\n        this.logger.log('Removing', root);\r\n        this.scanMessages(root, this.removeValidationMessageSpan);\r\n        this.scanInputs(root, this.removeInput);\r\n    };\r\n    /**\r\n     * Watches the provided root element for mutations, and scans for new validation directives to attach behavior.\r\n     * @param root The root node to watch; if not provided, `options.root` (default: `document.body`) will be watched\r\n     */\r\n    ValidationService.prototype.watch = function (root) {\r\n        var _this = this;\r\n        root !== null && root !== void 0 ? root : (root = this.options.root);\r\n        this.observer = new MutationObserver(function (mutations) {\r\n            mutations.forEach(function (mutation) {\r\n                _this.observed(mutation);\r\n            });\r\n        });\r\n        this.observer.observe(root, {\r\n            attributes: true,\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n        this.logger.log(\"Watching for mutations\");\r\n    };\r\n    ValidationService.prototype.observed = function (mutation) {\r\n        var _a, _b, _c;\r\n        if (mutation.type === 'childList') {\r\n            for (var i = 0; i < mutation.addedNodes.length; i++) {\r\n                var node = mutation.addedNodes[i];\r\n                this.logger.log('Added node', node);\r\n                if (node instanceof HTMLElement) {\r\n                    this.scan(node);\r\n                }\r\n            }\r\n            for (var i = 0; i < mutation.removedNodes.length; i++) {\r\n                var node = mutation.removedNodes[i];\r\n                this.logger.log('Removed node', node);\r\n                if (node instanceof HTMLElement) {\r\n                    this.remove(node);\r\n                }\r\n            }\r\n        }\r\n        else if (mutation.type === 'attributes') {\r\n            if (mutation.target instanceof HTMLElement) {\r\n                var attributeName = mutation.attributeName;\r\n                // Special case for disabled.\r\n                if (attributeName === 'disabled') {\r\n                    var target = mutation.target;\r\n                    this.reset(target);\r\n                }\r\n                else {\r\n                    var oldValue = (_a = mutation.oldValue) !== null && _a !== void 0 ? _a : '';\r\n                    var newValue = (_c = (_b = mutation.target.attributes[mutation.attributeName]) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : '';\r\n                    this.logger.log(\"Attribute '%s' changed from '%s' to '%s'\", mutation.attributeName, oldValue, newValue, mutation.target);\r\n                    if (oldValue !== newValue) {\r\n                        this.scan(mutation.target);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Highlights invalid element by adding errorClass CSS class and removing validClass CSS class\r\n     * @param input Element to modify\r\n     * @param errorClass Class to add\r\n     * @param validClass Class to remove\r\n     */\r\n    ValidationService.prototype.highlight = function (input, errorClass, validClass) {\r\n        this.swapClasses(input, errorClass, validClass);\r\n    };\r\n    /**\r\n     * Unhighlight valid element by removing errorClass CSS class and adding validClass CSS class\r\n     * @param input Element to modify\r\n     * @param errorClass Class to remove\r\n     * @param validClass Class to add\r\n     */\r\n    ValidationService.prototype.unhighlight = function (input, errorClass, validClass) {\r\n        this.swapClasses(input, validClass, errorClass);\r\n    };\r\n    return ValidationService;\r\n}());\r\n\r\n\r\n/******/ \treturn __webpack_exports__;\r\n/******/ })()\r\n;\r\n});","/*\r\n * Blazor Stream Rendering HTMX Extension\r\n * Author: Michael Tanczos\r\n * Credits to SSE extension and Microsoft aspnetcore\r\n * at https://github.com/dotnet/aspnetcore/blob/main/src/Components/Web.JS/src/Rendering/StreamingRendering.ts\r\n */\r\n//import htmx from 'htmx.org';\r\n\r\n(function () {\r\n\r\n    var api;\r\n    var enableDomPreservation = true;\r\n    var componentLoaded = false;\r\n\r\n    class blazorStreamingUpdate extends HTMLElement {\r\n        connectedCallback() {\r\n            const blazorSsrElement = this.parentNode;\r\n\r\n            // Synchronously remove this from the DOM to minimize our chance of affecting anything else\r\n            blazorSsrElement.parentNode?.removeChild(blazorSsrElement);\r\n\r\n            // When this element receives content, if it's <template blazor-component-id=\"...\">...</template>,\r\n            // insert the template content into the DOM\r\n            blazorSsrElement.childNodes.forEach(node => {\r\n                if (node instanceof HTMLTemplateElement) {\r\n                    const componentId = node.getAttribute(\"blazor-component-id\");\r\n                    if (componentId) {\r\n                        insertStreamingContentIntoDocument(componentId, node.content);\r\n                    }\r\n                }\r\n            });\r\n\r\n            htmx?.process(document.body);\r\n        }\r\n    }\r\n\r\n    htmx.defineExtension(\"rizzy-streaming\",\r\n        {\r\n            /**\r\n             * Init saves the provided reference to the internal HTMX API.\r\n             *\r\n             * @param {import(\"../htmx\").HtmxInternalApi} api\r\n             * @returns void\r\n             */\r\n            init: function (apiRef) {\r\n                // store a reference to the internal API.\r\n                api = apiRef;\r\n\r\n                // set a function in the public API for creating new EventSource objects\r\n                if (htmx.blazorSwapSsr == undefined) {\r\n                    if (customElements.get('blazor-ssr-end') === undefined) {\r\n                        customElements.define('blazor-ssr-end', blazorStreamingUpdate);\r\n                    }\r\n                    htmx.blazorSwapSsr = blazorSwapSsr;\r\n                }\r\n            },\r\n            onEvent: function (name, evt) {\r\n                if (name === \"htmx:afterOnLoad\") {\r\n                    htmx?.process(document.body);\r\n                }\r\n                else if (name === \"htmx:beforeRequest\") {\r\n                    var element = evt.detail.elt;\r\n                    if (evt.detail.requestConfig.target) {\r\n                        evt.detail.requestConfig.target.addEventListener(\"htmx:beforeSwap\",\r\n                            e => {\r\n                                // Any html that was already streamed in could have been updated with\r\n                                // blazor ssr content so the final xhr response can be thrown away\r\n                                //e.detail.shouldSwap = false;\r\n                            }, { once: true });\r\n                    }\r\n\r\n                    var last = 0;\r\n                    var swapSpec = api.getSwapSpecification(element);\r\n                    var xhr = evt.detail.xhr;\r\n\r\n                    // Create a container id for a temporary div container. All streamed html will be placed \r\n                    // inside the container so that htmx swap methods work correctly\r\n                    var cid = 'ctr' + crypto.randomUUID();\r\n\r\n                    xhr.addEventListener(\"readystatechange\", () => {\r\n\r\n                        // If finished we can unwrap the container all html was stored into\r\n                        if (xhr.readyState === 4) {\r\n                            var container = document.getElementById(cid);\r\n\r\n                            if (container != null)\r\n                                unwrap(container);\r\n                        }\r\n                    });\r\n\r\n                    xhr.addEventListener(\"progress\", e => {\r\n\r\n                        var container = document.getElementById(cid);\r\n\r\n                        // If the container doesn't exist we need to create it and swap it into the element\r\n                        // target space. From here on we can stream responses into the container directly.\r\n                        if (container == null) {\r\n                            container = document.createElement('div');\r\n                            container.id = cid;\r\n\r\n                            // Swap in a container div to hold the streaming html\r\n                            swap(element, container.outerHTML, swapSpec, xhr);\r\n\r\n                            // The very first swap into the container can be a replacement swap\r\n                            swapSpec.swapStyle = \"innerHTML\";\r\n\r\n                            // Ensure there is always a container even if not added to the dom\r\n                            container = document.getElementById(cid) ?? container;\r\n                        }\r\n\r\n                        // Compute any new html in this chunk\r\n                        let diff = e.currentTarget.response.substring(last);\r\n                        swap(container, diff, swapSpec, xhr);\r\n\r\n                        swapSpec.settleDelay = 0;\r\n                        swapSpec.swapStyle = \"beforeend\";\r\n                        last = e.loaded;\r\n                    });\r\n\r\n                }\r\n\r\n                return true;\r\n            }\r\n        });\r\n\r\n    function isCommentNodeInHead(commentNode) {\r\n        // Ensure that the provided node is indeed a comment node\r\n        if (commentNode && commentNode.nodeType === Node.COMMENT_NODE) {\r\n            let currentNode = commentNode.parentNode;\r\n            // Traverse up the DOM tree\r\n            while (currentNode !== null) {\r\n                if (currentNode === document.head) {\r\n                    // The comment node is within the <head>\r\n                    return true;\r\n                }\r\n                currentNode = currentNode.parentNode;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n        // The traversal reached the root without finding <head>, or <head> does not exist\r\n        return false;\r\n    }\r\n\r\n    function blazorSwapSsr(start, end, docFrag, xhr) {\r\n        var newDiv = wrap(start, end, 'ssr' + crypto.randomUUID());\r\n\r\n        var container = document.createElement('div');\r\n        container.appendChild(docFrag);\r\n\r\n        swap(newDiv, container.innerHTML, xhr);\r\n\r\n        unwrap(newDiv);\r\n    }\r\n\r\n    function wrap(start, end, id) {\r\n\r\n        var newDiv = document.createElement('div');\r\n        newDiv.id = id;\r\n\r\n        // Iterate through nodes between start and end\r\n        var currentNode = start.nextSibling;\r\n        while (currentNode && currentNode !== end) {\r\n            newDiv.appendChild(currentNode);\r\n            currentNode = start.nextSibling;\r\n        }\r\n\r\n        start.parentNode.insertBefore(newDiv, end);\r\n\r\n        return newDiv;\r\n    }\r\n\r\n    function unwrap(element) {\r\n        // Ensure that the element has a parent\r\n        if (element.parentNode) {\r\n            // Move all child nodes out of the element\r\n            while (element.firstChild) {\r\n                element.parentNode.insertBefore(element.firstChild, element);\r\n            }\r\n\r\n            // Remove the empty element\r\n            element.parentNode.removeChild(element);\r\n        }\r\n    }\r\n\r\n    function handleOutOfBandSwaps(elt, fragment, settleInfo) {\r\n        var oobSelects = api.getClosestAttributeValue(elt, \"hx-select-oob\");\r\n        if (oobSelects) {\r\n            var oobSelectValues = oobSelects.split(\",\");\r\n            for (var i = 0; i < oobSelectValues.length; i++) {\r\n                var oobSelectValue = oobSelectValues[i].split(\":\", 2);\r\n                var id = oobSelectValue[0].trim();\r\n                if (id.indexOf(\"#\") === 0) {\r\n                    id = id.substring(1);\r\n                }\r\n                var oobValue = oobSelectValue[1] || \"true\";\r\n                var oobElement = fragment.querySelector(\"#\" + id);\r\n                if (oobElement) {\r\n                    api.oobSwap(oobValue, oobElement, settleInfo);\r\n                }\r\n            }\r\n        }\r\n        forEach(findAll(fragment, '[hx-swap-oob], [data-hx-swap-oob]'), function (oobElement) {\r\n            var oobValue = getAttributeValue(oobElement, \"hx-swap-oob\");\r\n            if (oobValue != null) {\r\n                api.oobSwap(oobValue, oobElement, settleInfo);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement} elt\r\n     * @param {string} content\r\n     */\r\n    function swap(elt, content, swapSpec, xhr) {\r\n\r\n        api.withExtensions(elt, function (extension) {\r\n            content = extension.transformResponse(content, xhr, elt);\r\n        });\r\n\r\n        swapSpec ??= api.getSwapSpecification(elt);\r\n        var target = api.getTarget(elt);\r\n        var settleInfo = api.makeSettleInfo(elt);\r\n\r\n        // htmx 2.0\r\n        api.swap(target, content, swapSpec);\r\n\r\n        //api.selectAndSwap(swapSpec.swapStyle, target, elt, content, settleInfo);\r\n\r\n        settleInfo.elts.forEach(function (elt) {\r\n            if (elt.classList) {\r\n                elt.classList.add(htmx.config.settlingClass);\r\n            }\r\n            api.triggerEvent(elt, 'htmx:beforeSettle');\r\n        });\r\n\r\n        // Handle settle tasks (with delay if requested)\r\n        if (swapSpec.settleDelay > 0) {\r\n            setTimeout(doSettle(settleInfo), swapSpec.settleDelay);\r\n        } else {\r\n            doSettle(settleInfo)();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * doSettle mirrors much of the functionality in htmx that\r\n     * settles elements after their content has been swapped.\r\n     * TODO: this should be published by htmx, and not duplicated here\r\n     * @param {import(\"../htmx\").HtmxSettleInfo} settleInfo\r\n     * @returns () => void\r\n     */\r\n    function doSettle(settleInfo) {\r\n\r\n        return function () {\r\n            settleInfo.tasks.forEach(function (task) {\r\n                task.call();\r\n            });\r\n\r\n            settleInfo.elts.forEach(function (elt) {\r\n                if (elt.classList) {\r\n                    elt.classList.remove(htmx.config.settlingClass);\r\n                }\r\n                api.triggerEvent(elt, 'htmx:afterSettle');\r\n            });\r\n        }\r\n    }\r\n\r\n    function insertStreamingContentIntoDocument(componentIdAsString, docFrag) {\r\n        const markers = findStreamingMarkers(componentIdAsString)\r\n        if (markers) {\r\n            const { startMarker, endMarker } = markers\r\n            enableDomPreservation = !isCommentNodeInHead(startMarker);\r\n            if (enableDomPreservation) {\r\n                blazorSwapSsr(startMarker, endMarker, docFrag);\r\n            } else {\r\n                // In this mode we completely delete the old content before inserting the new content\r\n                const destinationRoot = endMarker.parentNode\r\n                const existingContent = new Range()\r\n                existingContent.setStart(startMarker, startMarker.textContent.length)\r\n                existingContent.setEnd(endMarker, 0)\r\n                existingContent.deleteContents()\r\n\r\n                while (docFrag.childNodes[0]) {\r\n                    destinationRoot.insertBefore(docFrag.childNodes[0], endMarker)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function findStreamingMarkers(componentIdAsString) {\r\n        // Find start marker\r\n        const expectedStartText = `bl:${componentIdAsString}`\r\n        const iterator = document.createNodeIterator(\r\n            document,\r\n            NodeFilter.SHOW_COMMENT\r\n        )\r\n        let startMarker = null\r\n        while ((startMarker = iterator.nextNode())) {\r\n            if (startMarker.textContent === expectedStartText) {\r\n                break\r\n            }\r\n        }\r\n\r\n        if (!startMarker) {\r\n            return null\r\n        }\r\n\r\n        // Find end marker\r\n        const expectedEndText = `/bl:${componentIdAsString}`\r\n        let endMarker = null\r\n        while ((endMarker = iterator.nextNode())) {\r\n            if (endMarker.textContent === expectedEndText) {\r\n                break\r\n            }\r\n        }\r\n\r\n        return endMarker ? { startMarker, endMarker } : null\r\n    }\r\n})();","document.body.attributes.__htmx_antiforgery||(document.addEventListener(\"htmx:configRequest\",e=>{let{verb:t,parameters:r,headers:n}=e.detail;if(\"GET\"===t?.toUpperCase())return;let i=htmx.config?.antiforgery;if(!i)return;let{headerName:a,requestToken:o,formFieldName:f}=i;if(!a&&!f){console.warn(\"Antiforgery configuration is missing both headerName and formFieldName. Token not added.\");return}f&&r[f]||(a?n[a]=o:r[f]=o)}),document.addEventListener(\"htmx:afterOnLoad\",e=>{if(e.detail.boosted){let t=e.detail.xhr.responseText,r=t.indexOf('<meta name=\"htmx-config\"'),n=t.indexOf(\">\",r)+1,i=t.indexOf(\"</meta>\",n);if(r>-1){let a=\"\";if(i>-1){let o=t.indexOf(\"/\",r);a=o>-1&&o<n?t.substring(r,n):t.substring(r,t.indexOf(\"</meta>\")+7)}else a=t.substring(r,n);let f=/content=\"([^\"]*)\"/,s=a.match(f);if(s&&s[1]){let d=s[1],m=document.querySelector(\"meta[name=htmx-config]\"),g=\"antiforgery\";try{htmx.config[g]=JSON.parse(d)[g]}catch(l){console.error(\"Error parsing htmx-config JSON:\",l);return}let c=document.createElement(\"meta\");c.setAttribute(\"name\",\"htmx-config\"),c.setAttribute(\"content\",d),m.replaceWith(c)}}}}),document.body.attributes.__htmx_antiforgery=!0);","//import htmx from 'htmx.org';\r\n\r\n(function() {\r\n    \r\n    htmx.defineExtension('rizzy-nonce',\r\n        {\r\n            transformResponse: function(text, xhr, elt) {\r\n\r\n                let documentNonce = htmx.config.documentNonce ?? htmx.config.inlineScriptNonce;\r\n\r\n                if (!documentNonce) {\r\n                    console.warn(\"rizzy-nonce extension loaded but no no nonce found for document. Inline scripts may be blocked.\");\r\n                    documentNonce = \"\";\r\n                }\r\n\r\n                // disable ajax fetching on history miss because it doesn't handle nonce replacment\r\n                htmx.config.refreshOnHistoryMiss = true; \r\n\r\n                // CSP nonce determination based on safe-nonce by Michael West\r\n                let nonce = xhr?.getResponseHeader('HX-Nonce');\r\n                if (!nonce) {\r\n                    const csp = xhr?.getResponseHeader('content-security-policy');\r\n                    if (csp) {\r\n                        const cspMatch = csp.match(/(style|script)-src[^;]*'nonce-([^']*)'/i);\r\n                        if (cspMatch) {\r\n                            nonce = cspMatch[2];\r\n                        }\r\n                    }\r\n                }\r\n                if (xhr && window.location.hostname) {\r\n                    const responseURL = new URL(xhr.responseURL);\r\n                    if (responseURL.hostname !== window.location.hostname) {\r\n                        nonce = ''; // ignore nonce header if request is not some domain \r\n                    }\r\n                }\r\n\r\n                nonce ??= '';\r\n\r\n                return this.processUnsafeHtml(text, documentNonce, nonce);\r\n            },\r\n            processUnsafeHtml: function(text, documentNonce, newScriptNonce) {\r\n                //const noncePattern = new RegExp(`(['\"])${newScriptNonce}\\\\1`, 'gi');\r\n\r\n                // Replace any occurrences of the nonce provided by the server with\r\n                // the existing document nonce. Note that at minimum the server text originates\r\n                // from is same-origin and the newScriptNonce that is replaced is determined\r\n                // from response headers which are only available when processing the xmlHttpRequest\r\n                if (documentNonce && newScriptNonce)\r\n                    text = text.replaceAll(newScriptNonce, documentNonce);\r\n\r\n                const parser = new DOMParser();\r\n\r\n                try {\r\n                    // At this point any remaining elements that don't have the correct\r\n                    // nonce will cause console errors to be emitted. We are going to strip\r\n                    // out those elements and any attempts to block rizzy-nonce in the included markup.\r\n                    let doc = parser.parseFromString(text, \"text/html\");\r\n\r\n                    if (doc) {\r\n                        // Remove any attempts to disable rizzy-nonce extension\r\n                        Array.from(doc.querySelectorAll('[hx-ext*=\"ignore:rizzy-nonce\"], [data-hx-ext*=\"ignore:rizzy-nonce\"]'))\r\n                            .forEach((elt) => {\r\n                                elt.remove();\r\n                            });\r\n\r\n                        // Select all <script> and <style> tags\r\n                        const elements = doc.querySelectorAll(\"script, style, link\");\r\n\r\n                        // Iterate through each element\r\n                        elements.forEach(elt => {\r\n                            const nonce = elt.getAttribute(\"nonce\");\r\n                            if (nonce !== documentNonce) {\r\n                                // Remove the element if the nonce doesn't match (or is missing)\r\n                                elt.remove();\r\n                            }\r\n                        });\r\n\r\n                        // Serialize the document back into an HTML string and return it\r\n                        return doc.documentElement.outerHTML;\r\n                    }\r\n\r\n                } catch (_) { }\r\n                {\r\n\r\n                }\r\n\r\n                return '';\r\n\r\n            }\r\n        });\r\n\r\n})()","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","import \"./rizzy-nonce\"\r\nimport \"./rizzy-streaming\"\r\nimport { ValidationService } from \"./vendor/aspnet-validation/aspnet-validation\";\r\nimport \"./antiforgerySnippet.min\";\r\n\r\n// Set up ASP.NET validation\r\nlet validationService = new ValidationService();\r\nvalidationService.bootstrap({ watch: true });\r\nwindow.validation = validationService;"],"names":["factory","self","__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","__webpack_exports__","r","d","MvcValidationProviders","ValidationService","isValidatable","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","iterator","this","n","v","op","TypeError","pop","length","push","nullLogger","class_1","warn","globalThis","console","log","_args","_i","arguments","element","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","validatableElementTypes","validatableSelector","selector","map","concat","join","getRelativeFormElement","elementName","name","selectedName","substring","dotLocation","lastIndexOf","relativeElementName","relativeElement","document","getElementsByName","form","querySelector","required","params","elementType","type","toLowerCase","allElementsOfThisName_1","Array","from","querySelectorAll","element_1","checked","checkboxHiddenInput","Boolean","trim","stringLength","min","parseInt","max","compare","other","otherElement","range","val","parseFloat","isNaN","regex","pattern","RegExp","test","email","creditcard","cDigit","nCheck","nDigit","bEven","replace","charAt","url","lowerCaseValue","indexOf","phone","remote","fieldSelectors","additionalfields","split","fields","fieldSelectors_1","fieldSelector","fieldName","substr","fieldElement","encodedParams","encodedParam","encodeURIComponent","payload","ok","request","XMLHttpRequest","postData","FormData","append","open","setRequestHeader","send","onload","status","data","JSON","parse","responseText","statusText","onerror","logger","_this","providers","messageFor","elementUIDs","elementByUID","formInputs","validators","formEvents","inputEvents","summary","debounce","allowHiddenFields","validateForm","callback","formUID","formValidationEvent","_a","_b","HTMLFormElement","Error","getElementUID","undefined","validateField","field","fieldUID","fieldValidationEvent","preValidate","submitEvent","preventDefault","stopImmediatePropagation","handleValidated","success","submitValidForm","focusFirstInvalid","newEvent","SubmitEvent","dispatchEvent","submitter","submitterInput","initialFormAction","action","name_1","getAttribute","createElement","appendChild","formAction","submit","removeChild","formInputUIDs","invalidFormInputUID","find","uid","firstInvalid","HTMLElement","focus","isValid","prevalidate","some","isFieldValid","options","root","watch","addNoValidate","ValidationInputCssClassName","ValidationInputValidCssClassName","ValidationMessageCssClassName","ValidationMessageValidCssClassName","ValidationSummaryCssClassName","ValidationSummaryValidCssClassName","addProvider","addMvcProviders","mvc","scanMessages","cb","validationMessageElements_1","span","getElementById","forms","containingForm","Element","closest","forms_1","validationMessageElements_2","pushValidationMessageSpan","_c","formId","formSpans","messageForId","spans","removeValidationMessageSpan","index","splice","parseDirectives","attributes","directives","validationAtributes","i","a","_loop_1","parameters","keys","filter","Q","directive","error","pcut","pvalue","pkey","guid4","c","Math","random","toString","node","x","getFormValidationTask","formValidators","formInputUIDs_1","inputUID","validator","tasks","all","every","getMessageFor","input","shouldValidate","trackFormInput","setAttribute","validationTask","validationEvent","CustomEvent","detail","valid","setTimeout","addEventListener","cbReset","formInputUIDs_2","inputUID_1","resetField","renderSummary","remove","removeEventListener","reset","isDisabled","scan","swapClasses","innerHTML","untrackFormInput","indexToRemove","addInput","createValidator","event","validate","error_1","dataset","valEvent","classList","contains","debounceTimeoutID","debounced","clearTimeout","defaultEvent","events","forEach","eventName","removeInput","scanInputs","inputs","createSummaryDOM","renderedMessages","ul","matchingElement","className","li","summaryElements","shadow","stringify","sort","renderedSummaryJSON","listElements","j","hasChildNodes","cloneNode","addError","message","highlight","removeError","unhighlight","provider","resolution","_d","isHidden","offsetWidth","offsetHeight","getClientRects","disabled","addClass","removeClass","add","bootstrap","assign","window","init","readyState","observer","MutationObserver","mutations","mutation","observed","observe","childList","subtree","addedNodes","removedNodes","target","attributeName","oldValue","newValue","errorClass","validClass","_typeof","module","define","api","blazorStreamingUpdate","_HTMLElement","_classCallCheck","_callSuper","_inherits","_blazorSsrElement$par","_htmx","blazorSsrElement","parentNode","childNodes","HTMLTemplateElement","componentId","componentIdAsString","docFrag","markers","expectedStartText","createNodeIterator","NodeFilter","SHOW_COMMENT","startMarker","nextNode","textContent","expectedEndText","endMarker","findStreamingMarkers","commentNode","nodeType","Node","COMMENT_NODE","currentNode","head","isCommentNodeInHead","destinationRoot","existingContent","Range","setStart","setEnd","deleteContents","insertBefore","blazorSwapSsr","insertStreamingContentIntoDocument","content","htmx","process","_wrapNativeSuper","start","end","xhr","newDiv","id","nextSibling","wrap","crypto","randomUUID","container","swap","unwrap","firstChild","elt","swapSpec","withExtensions","extension","transformResponse","getSwapSpecification","getTarget","settleInfo","makeSettleInfo","elts","config","settlingClass","triggerEvent","settleDelay","doSettle","task","defineExtension","apiRef","customElements","onEvent","evt","_htmx2","requestConfig","once","last","cid","_document$getElementB","outerHTML","swapStyle","currentTarget","response","loaded","__htmx_antiforgery","_htmx$config","_e$detail","headers","toUpperCase","antiforgery","headerName","requestToken","formFieldName","boosted","s","match","m","l","replaceWith","text","_htmx$config$document","documentNonce","inlineScriptNonce","refreshOnHistoryMiss","nonce","getResponseHeader","csp","cspMatch","location","hostname","URL","responseURL","processUnsafeHtml","newScriptNonce","replaceAll","parser","DOMParser","doc","parseFromString","documentElement","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","nmd","paths","children","validationService","validation"],"sourceRoot":""}